b 93
r  wrt "hello this is a stgring"
b ft_write
n
si
p r rax
i r rax
p __errno_location
p *__errno_location
quit
b 93
r
r wrt "this is a string"
b ft_write
n
si
delete breakpoint ft_write
r wrt "hello this is a string"
quit
b 93
r wrt "hello this is a string"
quit
b 93
r wrt "hello"
b ft_write
n
si
i r rax
si
si
i r rip
i r rsp
si
qujit
quit
b 93
r wrt "hello"
b ft_write
n
si
i r rsp
i r [rsp]
p 0x7fffffffda10
si
i r rsp
quit
b 93
r wrt "hello"
b ft_write
n
si
ir  rax
i r  rax
x  rax
i/x r  rax
/x r  rax
quit
b 93 
r wrt "hello"
b ft_write
n
si
p *__errno_location()
n
quit
b main
r
n
quit
b ft_read
quit
b ft_read
quit
b 108
r read
n
p buf
p buf2
quit
b ft_read
r read
si
i r rsi
i r $rsi
si
quit
b 108
r read
p buf2
p &buf2
n
r read
p &buf2
b ft_read
n
r read
p &fd
n
si
i r rdi 
r read
p fd
p &fd
quit
b ft_strdup
r dup "hey"
si
si
i r rdi
i r rax
si
si
si
si
si
i r (char*) rcx
p (char *) rcx
i r s  rcx
s/3 rsp
si
p (char *) rcx
i r  rcx
i r (char*) rcx
i r (char *) rcx
i (char *) r rcx 
help info 
help info r
p/s rcx
p/s rax
print rcx
si
print %rcx
print $rcx
print (char *) $rcx
si
print (char *) $rcx
print (char *) $rcx + 1
print (char *) $rcx + 2
print (char *) $rcx + 3
print (char *) $rax
print (char *) $rax + 1
print (char *) $rax + 2
print (char *) $rax + 3
print (char) $rax + 3
print (char) $rax + 4
print (char) $rax + 4
print (char) $rax + 5
print (int) $rax + 5
print (int) $rax + 3
print (int) $rax + 4
print (int) $rax + 2
print (int) $rax + 1
print (char *) $rax + 1
quit
b ft_strdup
r dup "hey"
si
p (char *) $rax
si
p (char *) $rax
p (char *) $rax + 1
si
quit
b strdup 
delete breakpoints
b ft_strdup
r dup "hey"
si
p (char *) $rax + 1
p (char *) $rax 
si
p (char *) $rax 
si
p (char *) rdi
p (char *) $rdi
p (char) $rdi
p (char) ($rdi)
p (char) $rdi[1]
p (char) $rdi + 0
p (char) $rdi + 1
p (char) $rdi + 2
p (char *) $rdi 
p (char *) $rdi + 3
quit
b ft_strdup
r dup "hey"
si
p dup2
p dup1
p dup
p (char  *) dup
p (char  *) dup2
n
p (char  *) dup2
r dup "hey"
si
si
p (char *) $rdi 
p (char *) $rax
si
p (char *) $rax
i r rcx
i r cl
i r rbx
si
quit
b ft_strdup
r dup "hey"
si
p (char *) $rax
p (char *) $rdi 
p (char *) $rdi + $rbx
p (char *) $rdi + 3
p (char *) $rdi + 2
si
quit
b ft_strdup
r dup "hey"
si
continue
quit
b ft_strdup
r dup "hey"
si
p (char *) $rax
p (char *) $rax + 3
p (char *) $rdi + 3
si
n
p dup2
p *dup2
p (char*) dup2
p (char*) dup2[3]
p  dup2[3]
p  $dup2[3]
print dup2
print *dup2
print &dup2
n
p (char) dup2 + 2
p (char) dup2
p (char*) dup2
ni
n
quit
b ft_strdup
r dup hey
si
quit
b ft_strdup
r dup hey
si
b .loop
ft_strdup.loop
continue
quit
